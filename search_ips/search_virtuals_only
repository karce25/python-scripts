def extract_lines_with_keywords(input_file, output_file, keywords):
    try:
        # Track unique lines to avoid duplicates
        written_lines = set()

        # Open input and output files
        with open(input_file, 'r') as infile, open(output_file, 'w') as outfile:
            matches_found = False
            
            for line_number, line in enumerate(infile, start=1):
                # Check if the line contains any keyword
                if any(keyword.lower() in line.lower() for keyword in keywords):
                    cleaned_line = line.strip()  # Clean whitespace
                    if cleaned_line not in written_lines:  # Only write if not already written
                        outfile.write(f"{line_number}: {cleaned_line}\n")  # Write cleaned line with its line number
                        written_lines.add(cleaned_line)  # Add the line to the set
                        matches_found = True
            
            if matches_found:
                print(f"Lines containing keywords have been extracted to '{output_file}' without duplicates.")
            else:
                print(f"No lines with the given keywords were found in '{input_file}'.")
    except FileNotFoundError:
        print(f"Error: The file '{input_file}' was not found.")
    except Exception as e:
        print(f"An error occurred: {e}")

# Example usage
input_file = 'your_output_file.txt'  # Replace with the name of your input file
output_file = 'filtered_lines.txt'   # Replace with the name of your desired output file
keywords = ['ltm virtual /Common', 'destination']  # Define your search keywords
extract_lines_with_keywords(input_file, output_file, keywords)
